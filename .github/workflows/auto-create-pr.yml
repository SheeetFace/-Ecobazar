name: Auto Create Pull Request

on:
  push:
    branches-ignore:
      - main

jobs:
  create_pull_request:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Get commit message
        id: get_commit_message
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)
          echo "COMMIT_MSG=${COMMIT_MSG}" >> $GITHUB_ENV

      - name: Create Pull Request
        id: create_pr
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.PULL_REQUESTS_ACTIONS_TOKEN }}
          commit-message: "Create Pull Request from ${{ github.ref }}"
          branch: ${{ github.ref }}
          base: main
          title: "${{ env.COMMIT_MSG }}"
          body: |
            This is an automated pull request created by GitHub Actions.
            Changes have been pushed to the branch `${{ github.ref }}`.

      - name: Add labels
        if: steps.create_pr.outputs.pull-request-number
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.PULL_REQUESTS_ACTIONS_TOKEN }}
          script: |
            const prNumber = ${{ steps.create_pr.outputs.pull-request-number }};
            const commitMsg = process.env.COMMIT_MSG;
            
            const labelMap = {
              'STYLE:': 'STYLE',
              'FIX:': 'FIX',
              'REFACTOR:': 'REFACTOR',
              'FEAT:': 'FEAT',
              'TEST:': 'TEST'
            };
            
            let labels = [];
            
            for (const [key, value] of Object.entries(labelMap)) {
              if (commitMsg.includes(key)) {
                labels.push(value);
              }
            }
            
            if (labels.length > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                labels: labels
              });
            }
